version: '3.4'

services:
  db:
    image: library/postgres:13.2-alpine
    container_name: starter_db
    env_file: .env
    ports:
      - '5439:5432'
  hasura:
    image: hasura/graphql-engine:v1.3.3.cli-migrations
    container_name: starter_hasura
    ports:
      - '8089:8080'
    depends_on:
      - "db"
    volumes:
      - ./db/hasura/migrations:/hasura-migrations
    env_file: .env
    environment:
      HASURA_GRAPHQL_DATABASE_URL: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}"
  #    restart: on-failure
  pgadmin:
    image: dpage/pgadmin4:5.1
    container_name: starter_pgadmin
    env_file: .env
    ports:
      - "5409:80"
    # Tried to predefine the DB server, which didn't work well on Windows
    # https://www.pgadmin.org/docs/pgadmin4/latest/container_deployment.html
  #    volumes:
  #      - "./utils/pgadmin-servers.json:/servers.json"

## It takes too long to compile (more than twice as long), we had better run it on host OS
## You would start it with command:
## start:docker: ts-node-dev --no-deps --transpile-only --respawn --poll --interval 1000 --ignore-watch node_modules --ignore-watch node_modules_docker src/main.ts
#  api:
#    image: node:10-alpine
#    container_name: starter_api
#    working_dir: /app
#    command: yarn start:docker
#    volumes:
#      - ./bp-nestjs-starter:/app
#      - ./bp-nestjs-starter/node_modules_docker:/app/node_modules
#    ports:
#      - "4141:4141"
#    depends_on:
#      - db
#    environment:
#      TYPEORM_URL: postgres://user:user@db:5432/seed

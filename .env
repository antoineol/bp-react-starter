# .env is the default environment. Ensure .env.staging and .env.prod are filled immediately when
# you update .env.
# Those variables are loaded by src/environment/env.ts
# To add a new environment, add for example a .env.staging and add the corresponding scripts in
# package.json, e.g. `"build:staging": "env-cmd .env.staging npm run build",`.

# Local dev environment variables
REACT_APP_ENV=dev
#REACT_APP_API_PATH=https://jsonplaceholder.typicode.com
REACT_APP_PUBLIC_ORIGIN=http://localhost:3000
REACT_APP_API_PATH=http://localhost:3000/api
REACT_APP_API_WS=ws://localhost:4000
REACT_APP_HASURA_PATH=http://localhost:8080/v1
REACT_APP_HASURA_WS=ws://localhost:8080/v1

# Docker environment variables (dev only)
# ----------------------------
## Postgres
# Credentials must differ from the main database in order to avoid Programming by Coincidence
# https://pragprog.com/the-pragmatic-programmer/extracts/coincidence
POSTGRES_DB=seed
POSTGRES_USER=user
POSTGRES_PASSWORD=user
## pgadmin
PGADMIN_DEFAULT_EMAIL=antoine_ol@earlymetrics.com
PGADMIN_DEFAULT_PASSWORD=postgres
## Hasuna
HASURA_GRAPHQL_DATABASE_URL=postgres://user:user@db:5432/seed
# set to "false" to disable console
HASURA_GRAPHQL_ENABLE_CONSOLE=true
HASURA_GRAPHQL_ENABLED_LOG_TYPES=startup, http-log, webhook-log, websocket-log, query-log
HASURA_GRAPHQL_ADMIN_SECRET=secret
HASURA_GRAPHQL_JWT_SECRET={"key": "9vsSyva7pz_qSKg3kglniUv1Tbc5o-CMPTq58s2EY1U", "type": "HS256", "audience": "em-everybody", "issuer": "em-starter-app"}
HASURA_GRAPHQL_UNAUTHORIZED_ROLE=anonymous
HASURA_API_SCHEMA=http://host.docker.internal:3000/api/graphql
